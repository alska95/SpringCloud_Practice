<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7617c693-e59c-4b8e-9f6d-c72122c7370d" name="Default Changelist" comment="catalogMicroService - Kafka적용&#10;orderService에서 produce된 메시지 받아서 db업데이트함.(consumer)&#10;order정보의 productId를 가져옴 -&gt; order의 quantity만큼 수량 제거">
      <change afterPath="$PROJECT_DIR$/../orderservice/src/main/java/com/example/orderservice/messagequeue/KafkaProducer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../orderservice/src/main/java/com/example/orderservice/messagequeue/KafkaProducerConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/catalogservice/messagequeue/KafkaConsumer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/catalogservice/messagequeue/KafkaConsumer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/catalogservice/messagequeue/KafkaConsumerConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/catalogservice/messagequeue/KafkaConsumerConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../orderservice/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../orderservice/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../orderservice/src/main/java/com/example/orderservice/controller/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../orderservice/src/main/java/com/example/orderservice/controller/OrderController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../orderservice/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../orderservice/src/main/resources/application.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectId" id="1xGgnBuvbSB0xvyeLrvqmD4MyHh" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DatabaseDriversLRU" value="h2.unified" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RunManager">
    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
      <option name="arquillianRunConfiguration">
        <value>
          <option name="containerStateName" value="" />
        </value>
      </option>
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CatalogServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="catalog-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.catalogservice.CatalogServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7617c693-e59c-4b8e-9f6d-c72122c7370d" name="Default Changelist" comment="" />
      <created>1629987006038</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1629987006038</updated>
      <workItem from="1629987008022" duration="9365000" />
      <workItem from="1630300620920" duration="3874000" />
      <workItem from="1631047833639" duration="6672000" />
      <workItem from="1636063015043" duration="1946000" />
    </task>
    <task id="LOCAL-00001" summary="catalogMicroService - 구현">
      <created>1629989322804</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1629989322804</updated>
    </task>
    <task id="LOCAL-00002" summary="catalogMicroService - Kafka적용&#10;orderService에서 produce된 메시지 받아서 db업데이트함.(consumer)&#10;order정보의 productId를 가져옴 -&gt; order의 quantity만큼 수량 제거">
      <created>1636063850969</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1636063850969</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="catalogMicroService - 구현" />
    <MESSAGE value="catalogMicroService - Kafka적용&#10;orderService에서 produce된 메시지 받아서 db업데이트함.(consumer)&#10;order정보의 productId를 가져옴 -&gt; order의 quantity만큼 수량 제거" />
    <option name="LAST_COMMIT_MESSAGE" value="catalogMicroService - Kafka적용&#10;orderService에서 produce된 메시지 받아서 db업데이트함.(consumer)&#10;order정보의 productId를 가져옴 -&gt; order의 quantity만큼 수량 제거" />
  </component>
</project>